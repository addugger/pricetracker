plugins {
  id 'org.springframework.boot' version '2.6.0-M2'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
}

group = 'com.dugger'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-quartz'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  compileOnly 'org.projectlombok:lombok'
  runtimeOnly 'com.h2database:h2'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
  useJUnitPlatform()
}

processResources.doLast {
  File secretsFile = new File("$rootDir/SECRETS.properties")
  if (!secretsFile.exists()) {
    println "You must include SECRETS.properties in your root to add secrets too application.properties"
  }
  String secretsLastLine = secretsFile.readLines()[-1]
  File appProps = new File("$buildDir/resources/main/application.properties")
  String propsLastLine = appProps.readLines()[-1]
  // process resources gets called multiple times,so this ensures we only add the secrets once
  if (!secretsLastLine.equals(propsLastLine)) secretsFile.eachLine { String line -> appProps.append("\n$line") }
}
